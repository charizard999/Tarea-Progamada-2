#BlueJ class context
comment0.target=Datos
comment0.text=\r\n\ Clase\ Datos.\r\n\ \r\n\ @author\ (Emilio\ Romero)\ \r\n\ @version\ (08/06/2021)\r\n
comment1.params=
comment1.target=Datos()
comment1.text=\r\n\ Constructor\ de\ objetos\ de\ la\ clase\ Datos.\r\n
comment10.params=nombre
comment10.target=Categoria\ recuperarCategoria(java.lang.String)
comment10.text=\r\n\ Se\ obtinene\ la\ categor\u00EDa.\r\n\ \r\n\ @param\ \ nombre\ (String)\r\n\ @return\ \ ct\ (Categoria)\r\n
comment11.params=ob\ nombreArchivo
comment11.target=void\ escribirFichero(java.lang.Object,\ java.lang.String)
comment11.text=\r\n\ Escribe\ en\ el\ fichero.\r\n\ \r\n\ @param\ \ ob\ (Object),\ nombreArchivo\ (String)\r\n\ \r\n
comment12.params=nombreArchivo
comment12.target=java.lang.Object\ leerFichero(java.lang.String)
comment12.text=\r\n\ Lee\ el\ fichero.\r\n\ \r\n\ @param\ \ nombreArchivo\ (String)\r\n\ \r\n
comment13.params=nombre
comment13.target=boolean\ existeLista(java.lang.String)
comment13.text=\r\n\ Comprueba\ que\ exista\ una\ lista.\r\n\ \r\n\ @param\ \ nombre\ (String)\r\n\ \r\n
comment14.params=fecha
comment14.target=java.util.Date\ parseDate(java.lang.String)
comment14.text=\r\n\ Pasa\ un\ String\ a\ Date.\r\n\ \r\n\ @param\ \ fecha\ (String)\r\n\ @return\ \ date\ (Date)\r\n
comment15.params=
comment15.target=void\ imprimirResponsables()
comment15.text=\r\n\ Imprime\ responsables.\r\n
comment16.params=i
comment16.target=Responsable\ responsableIndex(int)
comment16.text=\r\n\ Busca\ por\ medio\ de\ un\ int\ el\ respectivo\ responsable.\r\n\ \r\n\ @param\ \ i\ (int)\r\n\ @return\ \ responsables\ (Responsable)\r\n
comment17.params=nombre
comment17.target=boolean\ eliminarFichero(java.lang.String)
comment17.text=\r\n\ Elimina\ el\ fichero.\r\n\ \r\n\ @param\ \ nombre\ (String)\r\n\ @return\ \ boolean\r\n
comment18.params=nombre
comment18.target=void\ eliminarCategoria(java.lang.String)
comment18.text=\r\n\ Elimina\ la\ categar\u00EDa.\r\n\ \r\n\ @param\ \ nombre\ (String)\r\n
comment19.params=nombre
comment19.target=void\ eliminarArchivoDatos(java.lang.String)
comment2.params=categorias
comment2.target=void\ setCategorias(java.util.ArrayList)
comment2.text=\r\n\ Setear\ categor\u00EDas.\r\n\r\n\ @param\ categorias\ (ArrayList<Categoria>)\ .\r\n\ \r\n
comment20.params=nombre
comment20.target=ArchivoDatos\ recuperarArchivoDatos(java.lang.String)
comment20.text=\r\n\ Recupera\ ArchivoDatos.\r\n\ \r\n\ @param\ \ nombre\ (String)\r\n\ @return\ \ a\ (ArchivoDatos)\r\n
comment21.params=
comment21.target=void\ imprimirCategarias()
comment21.text=\r\n\ Imprime\ las\ categor\u00EDas.\r\n
comment22.params=nombreResponsable
comment22.target=boolean\ buscarResponsable(java.lang.String)
comment22.text=\r\n\ Busca\ si\ existe\ el\ responsable.\r\n\ \r\n\ @param\ \ nombreResponsable\ (String)\r\n\ @return\ \ boolean\r\n
comment23.params=i
comment23.target=Responsable\ getResponsableIndex(int)
comment23.text=\r\n\ Obtiene\ el\ responsable\ por\ medio\ de\ un\ int.\r\n\ \r\n\ @param\ \ i\ (int)\r\n\ @return\ \ r\ (Responsable)\r\n
comment24.params=
comment24.target=void\ mostrarTablero()
comment24.text=\r\n\ Muestra\ el\ tablero.\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getCategorias()
comment3.text=\r\n\ Obtener\ categor\u00EDas.\r\n\r\n\ \r\n\ @return\ \ categorias\ (ArrayList<Categoria>)\r\n
comment4.params=archivoDatos
comment4.target=void\ setArchivoDatos(java.util.ArrayList)
comment4.text=\r\n\ Setear\ ArchivoDatos.\r\n\r\n\ @param\ archivoDatos\ (ArrayList<ArchivoDatos>)\ .\r\n\ \r\n
comment5.params=
comment5.target=java.util.ArrayList\ getArchivoDatos()
comment5.text=\r\n\ Obtener\ ArchivoDatos.\r\n\r\n\ \r\n\ @return\ \ archivoDatos\ (ArrayList<ArchivoDatos>)\r\n
comment6.params=responsables
comment6.target=void\ setResponsables(java.util.ArrayList)
comment6.text=\r\n\ Setear\ Responsable.\r\n\r\n\ @param\ responsables\ (ArrayList<Responsable>)\ \r\n\ \r\n
comment7.params=
comment7.target=java.util.ArrayList\ getResponsables()
comment7.text=\r\n\ Obtener\ Responsable.\r\n\r\n\ \r\n\ @return\ \ responsables\ (ArrayList<Responsable>)\r\n
comment8.params=nombre
comment8.target=boolean\ existeResponsable(java.lang.String)
comment8.text=\r\n\ Verifica\ que\ exista\ el\ responsable.\r\n\ \r\n\ @param\ \ nombre\ (String)\r\n\ @return\ \ boolean\r\n
comment9.params=nombre
comment9.target=Responsable\ recuperarResponsable(java.lang.String)
comment9.text=\r\n\ Se\ obtinene\ el\ responsable.\r\n\ \r\n\ @param\ \ nombre\ (String)\r\n\ @return\ \ r\ (Responsable)\r\n
numComments=25
